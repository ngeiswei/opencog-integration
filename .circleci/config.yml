version: 2.0

jobs:

    build-docker:
        docker:
            - image: docker:19-git
        working_directory: /ws/opencog-docker
        steps:
            - setup_remote_docker
            - run:
                name: Echo arguments
                command: |
                    echo DOCKER_BRANCH=$DOCKER_BRANCH
                    echo DOCKER_REPO=$DOCKER_REPO
                    echo DOCKER_USERNAME=$DOCKER_USERNAME
            - run:
                name: Clone docker repo
                command: |
                    git clone --depth=1 -b $DOCKER_BRANCH $DOCKER_REPO .
            - run:
                name: Build opencog-deps image
                command: |
                    cd ./opencog
                    OCPKG_URL=`echo ${OCPKG_REPO} | \
                        sed 's/github/raw.githubusercontent/' | \
                        sed 's~\.git$~/'${OCPKG_BRANCH}'/ocpkg~'`
                    sh ./docker-build.sh -u -b
                    docker tag singularitynet/opencog-deps:latest vsbogdcircleci/singularitynet:opencog-deps
            - run:
                name: Build relex image
                no_output_timeout: 60m
                command: |
                    cd ./opencog
                    sh ./docker-build.sh -u -r
                    docker tag singularitynet/relex:latest vsbogdcircleci/singularitynet:relex
            - run:
                name: Build postgres image
                command: |
                    cd ./opencog
                    ATOM_SQL_URL=`echo ${ATOMSPACE_REPO} | \
                        sed 's/github/raw.githubusercontent/' | \
                        sed 's~\.git$~/'${ATOMSPACE_BRANCH}'/opencog/persist/sql/multi-driver/atom.sql~'`
                    sh ./docker-build.sh -u -p
                    docker tag singularitynet/postgres:latest vsbogdcircleci/singularitynet:postgres
            - run:
                name: Push images
                command: |
                    echo "$DOCKER_PASSWORD" | docker login --username=$DOCKER_USERNAME --password-stdin
                    docker push vsbogdcircleci/singularitynet:opencog-deps
                    docker push vsbogdcircleci/singularitynet:relex
                    docker push vsbogdcircleci/singularitynet:postgres

    build-cogutil:
        docker:
            - image: vsbogdcircleci/singularitynet:opencog-deps
              user: root
              auth:
                  username: $DOCKER_USERNAME
                  password: $DOCKER_PASSWORD
        working_directory: /ws/cogutil
        steps:
            - attach_workspace:
                at: /ws
            - run:
                name: Echo arguments
                command: |
                    echo COGUTIL_BRANCH=$COGUTIL_BRANCH
                    echo COGUTIL_REPO=$COGUTIL_REPO
            - run:
                name: Build cogutil
                command: |
                    git clone --depth 1 -b $COGUTIL_BRANCH $COGUTIL_REPO .
                    mkdir -p build
                    cd build
                    cmake ..
                    make
                    make tests
                    make test
            - persist_to_workspace:
                root: /ws
                paths:
                    - cogutil

    build-atomspace:
        docker:
            - image: vsbogdcircleci/singularitynet:opencog-deps
              user: root
              auth:
                  username: $DOCKER_USERNAME
                  password: $DOCKER_PASSWORD
              environment:
                  PGHOST: opencog-postgres
                  PGUSER: opencog_test
                  PGPASSWORD: cheese
            - image: vsbogdcircleci/singularitynet:postgres
              auth:
                  username: $DOCKER_USERNAME
                  password: $DOCKER_PASSWORD
              name: opencog-postgres
        working_directory: /ws/atomspace
        steps:
            - attach_workspace:
                at: /ws
            - run:
                name: Echo arguments
                command: |
                    echo ATOMSPACE_BRANCH=$ATOMSPACE_BRANCH
                    echo ATOMSPACE_REPO=$ATOMSPACE_REPO
            - run:
                name: Build atomspace
                command: |
                    make -C /ws/cogutil/build install
                    git clone --depth 1 -b $ATOMSPACE_BRANCH $ATOMSPACE_REPO .
                    mkdir -p build
                    cd build
                    cmake ..
                    make
                    make tests
                    make test
            - persist_to_workspace:
                root: /ws
                paths:
                    - atomspace

    build-opencog:
        docker:
            - image: vsbogdcircleci/singularitynet:opencog-deps
              user: root
              auth:
                  username: $DOCKER_USERNAME
                  password: $DOCKER_PASSWORD
            - image: vsbogdcircleci/singularitynet:relex
              auth:
                  username: $DOCKER_USERNAME
                  password: $DOCKER_PASSWORD
              name: relex
              command: /bin/sh -c "./opencog-server.sh"
        working_directory: /ws/opencog
        steps:
            - attach_workspace:
                at: /ws
            - run:
                name: Echo arguments
                command: |
                    echo OPENCOG_BRANCH=$OPENCOG_BRANCH
                    echo OPENCOG_REPO=$OPENCOG_REPO
            - run:
                name: Build opencog
                command: |
                    make -C /ws/cogutil/build install
                    make -C /ws/atomspace/build install
                    make -C /ws/cogserver/build install
                    make -C /ws/attention/build install
                    git clone --depth 1 -b $OPENCOG_BRANCH $OPENCOG_REPO .
                    mkdir -p build
                    cd build
                    cmake ..
                    make
                    make tests
                    make test
            - persist_to_workspace:
                root: /ws
                paths:
                    - opencog

    build-moses:
        docker:
            - image: vsbogdcircleci/singularitynet:opencog-deps
              user: root
              auth:
                  username: $DOCKER_USERNAME
                  password: $DOCKER_PASSWORD
        working_directory: /ws/moses
        steps:
            - attach_workspace:
                at: /ws
            - run:
                name: Echo arguments
                command: |
                    echo MOSES_BRANCH=$MOSES_BRANCH
                    echo MOSES_REPO=$MOSES_REPO
            - run:
                name: Build moses
                command: |
                    make -C /ws/cogutil/build install
                    git clone --depth 1 -b $MOSES_BRANCH $MOSES_REPO .
                    mkdir -p build
                    cd build
                    cmake ..
                    make
                    make tests
                    make test

    build-asmoses:
        docker:
            - image: vsbogdcircleci/singularitynet:opencog-deps
              user: root
              auth:
                  username: $DOCKER_USERNAME
                  password: $DOCKER_PASSWORD
        working_directory: /ws/asmoses
        steps:
            - attach_workspace:
                at: /ws
            - run:
                name: Echo arguments
                command: |
                    echo ASMOSES_BRANCH=$ASMOSES_BRANCH
                    echo ASMOSES_REPO=$ASMOSES_REPO
            - run:
                name: Build asmoses
                command: |
                    make -C /ws/cogutil/build install
                    make -C /ws/atomspace/build install
                    git clone --depth 1 -b $ASMOSES_BRANCH $ASMOSES_REPO .
                    mkdir -p build
                    cd build
                    cmake ..
                    make
                    make tests
                    make test

    build-ure:
        docker:
            - image: vsbogdcircleci/singularitynet:opencog-deps
              user: root
              auth:
                  username: $DOCKER_USERNAME
                  password: $DOCKER_PASSWORD
        working_directory: /ws/ure
        steps:
            - attach_workspace:
                at: /ws
            - run:
                name: Echo arguments
                command: |
                    echo URE_BRANCH=$URE_BRANCH
                    echo URE_REPO=$URE_REPO
            - run:
                name: Build ure
                command: |
                    make -C /ws/cogutil/build install
                    make -C /ws/atomspace/build install
                    git clone --depth 1 -b $URE_BRANCH $URE_REPO .
                    mkdir -p build
                    cd build
                    cmake ..
                    make
                    make tests
                    make test
            - persist_to_workspace:
                root: /ws
                paths:
                    - ure

    build-miner:
        docker:
            - image: vsbogdcircleci/singularitynet:opencog-deps
              user: root
              auth:
                  username: $DOCKER_USERNAME
                  password: $DOCKER_PASSWORD
        working_directory: /ws/miner
        steps:
            - attach_workspace:
                at: /ws
            - run:
                name: Echo arguments
                command: |
                    echo MINER_BRANCH=$MINER_BRANCH
                    echo MINER_REPO=$MINER_REPO
            - run:
                name: Build miner
                command: |
                    make -C /ws/cogutil/build install
                    make -C /ws/atomspace/build install
                    make -C /ws/ure/build install
                    git clone --depth 1 -b $MINER_BRANCH $MINER_REPO .
                    mkdir -p build
                    cd build
                    cmake ..
                    make
                    make tests
                    make test

    build-learn:
        docker:
            - image: vsbogdcircleci/singularitynet:opencog-deps
              user: root
              auth:
                  username: $DOCKER_USERNAME
                  password: $DOCKER_PASSWORD
              environment:
                  PGHOST: opencog-postgres
                  PGUSER: opencog_user
                  PGPASSWORD: cheese
            - image: vsbogdcircleci/singularitynet:postgres
              auth:
                  username: $DOCKER_USERNAME
                  password: $DOCKER_PASSWORD
              name: opencog-postgres
        working_directory: /ws/learn
        steps:
            - attach_workspace:
                at: /ws
            - run:
                name: Echo arguments
                command: |
                    echo LEARN_BRANCH=$LEARN_BRANCH
                    echo LEARN_REPO=$LEARN_REPO
            - run:
                name: Build learn
                command: |
                    make -C /ws/cogutil/build install
                    make -C /ws/atomspace/build install
                    make -C /ws/cogserver/build install
                    make -C /ws/attention/build install
                    make -C /ws/opencog/build install
                    git clone --depth 1 -b $LEARN_BRANCH $LEARN_REPO .
                    mkdir -p build
                    cd build
                    cmake ..
                    make
                    make db
                    make tests
                    make test

    build-attention:
        docker:
            - image: vsbogdcircleci/singularitynet:opencog-deps
              user: root
              auth:
                  username: $DOCKER_USERNAME
                  password: $DOCKER_PASSWORD
        working_directory: /ws/attention
        steps:
            - attach_workspace:
                at: /ws
            - run:
                name: Echo arguments
                command: |
                    echo ATTENTION_BRANCH=$ATTENTION_BRANCH
                    echo ATTENTION_REPO=$ATTENTION_REPO
            - run:
                name: Build attention
                command: |
                    make -C /ws/cogutil/build install
                    make -C /ws/atomspace/build install
                    make -C /ws/cogserver/build install
                    git clone --depth 1 -b $ATTENTION_BRANCH $ATTENTION_REPO .
                    mkdir -p build
                    cd build
                    cmake ..
                    make
                    make tests
                    make test
            - persist_to_workspace:
                root: /ws
                paths:
                    - attention

    build-cogserver:
        docker:
            - image: vsbogdcircleci/singularitynet:opencog-deps
              user: root
              auth:
                  username: $DOCKER_USERNAME
                  password: $DOCKER_PASSWORD
        working_directory: /ws/cogserver
        steps:
            - attach_workspace:
                at: /ws
            - run:
                name: Echo arguments
                command: |
                    echo COGSERVER_BRANCH=$COGSERVER_BRANCH
                    echo COGSERVER_REPO=$COGSERVER_REPO
            - run:
                name: Build cogserver
                command: |
                    make -C /ws/cogutil/build install
                    make -C /ws/atomspace/build install
                    git clone --depth 1 -b $COGSERVER_BRANCH $COGSERVER_REPO .
                    mkdir -p build
                    cd build
                    cmake ..
                    make
                    make tests
                    make test
            - persist_to_workspace:
                root: /ws
                paths:
                    - cogserver

workflows:
    version: 2
    complete_build:
        jobs:
            - build-docker:
                # Context here and below contains username and password for
                # dockerhub repo to write/read singularitynet docker images
                context: dockerhub
            - build-cogutil:
                context: dockerhub
                requires:
                    - build-docker
            - build-atomspace:
                context: dockerhub
                requires:
                    - build-cogutil
            - build-ure:
                context: dockerhub
                requires:
                    - build-atomspace
            - build-cogserver:
                context: dockerhub
                requires:
                    - build-atomspace
            - build-attention:
                context: dockerhub
                requires:
                    - build-cogserver
            - build-opencog:
                context: dockerhub
                requires:
                    - build-docker
                    - build-attention
                    - build-ure
            - build-moses:
                context: dockerhub
                requires:
                    - build-cogutil
            - build-asmoses:
                context: dockerhub
                requires:
                    - build-atomspace
            - build-miner:
                context: dockerhub
                requires:
                    - build-ure
            - build-learn:
                context: dockerhub
                requires:
                    - build-opencog
